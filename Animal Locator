public class AnimalLocator {
    public static string getAnimalNameById(integer id){
        Http http = new Http();
        HttpRequest request = new HttpRequest();
        request.setEndpoint('https://th-apex-http-callout.herokuapp.com/animals/' + id);
        request.setMethod('get');
        HttpResponse response = http.send(request);
        string strResp = '';
        system.debug('******response' + response.getstatuscode());
        system.debug('******response' + response.getbody());
        if(response.getstatuscode() == 200){
            map<string,object> results = (map<string,object>) json.deserializeUntyped(response.getbody());
            map<string,object> animals = (map<string,object>) results.get('animal');
            system.debug('Received the following animals:' + animals);
            strResp = string.valueof(animals.get('name'));
            system.debug('strResp >' + strResp);
        }
        return strResp;
    }
        
}

@isTest
global class AnimalLocatorMock implements HttpCalloutMock {
    
    global HTTPResponse respond(HTTPRequest request){
        
        HttpResponse response = new HttpResponse();
        response.setHeader('Content-Type', 'application/json');
        response.setBody('{"animal":{"id":1,"name":"test","eats":"test food","says":"hello world"}}');
        response.setStatusCode(200);
        return response; 
    }
}

@isTest
public class AnimalLocatorTest {
    @isTest
    static void testGetcallout() {
        Test.setMock(HttpCalloutMock.class, new AnimalLocatorMock ());
        string actual = AnimalLocator.getAnimalNameById(1);
        string expected = 'test';
        system.assertEquals(expected, actual);
    }
}
